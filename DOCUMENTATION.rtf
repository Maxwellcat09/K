█████████    █████    ███████████████ ██   ██ 
██      ██  ██ ████   ██   ██  ██   ██ ██ ██  
███████  ████  ██ ██  ██   ██  ███████  ███   
     ██   ██   ██  ██ ██   ██  ██   ██ ██ ██  
███████   ██   ██   ████   ██  ██   ████   ██ 

an Operation is defined by the Starting and Ending brackets, as you can see:
start {{
...
}} end

Curly braces always close on a different line than they start, will never have its own code on the same line they start, and never end on a line that has its own code.
Parenthesis always close on the same line and only contain one variable (or array), all parenthesis for a command can be put on the same line, but its a good option to set them all on a different line.
Parenthesis will always only have 1(one) parameter in itself.
Dollar signs denote an external action, like a file edit or HTTP request, are always placed before the first character of a command, these are used as a stop from new developers accidentally deleting or editing files.
Dollar signs can be toggled with the CFG command: SERSIGNTRUE/SERSIGNFALSE
Square brackets are always ignored, but can make your code a little bit more readable (say marking the start and end of a block without skipping said block).

loop (cscInf) {
//your code
} until {
chkuse (7) randvariable
randvariable == 1

Blocks are inside Operations, they can be defined via
setbl(//start line number,// end line number)
they can be skipped until jumped to if a /: is placed at the beginning of the first line that the block applies on, and a :/ on the end of the last line

All code, excluding CFG, must be in an Operation

Variables can be named anything

Datatypes
integer
bool
float
character
string

Math
icr - increases a variable by 1. icr intvariable
dcr - decreases a variable by 1. dcr intvariable
add - adds specified number or variable to specified number(second number in writeVar only) or variable. the second variable will always be the answer unless in a writeVar. add (7) intvariable
sub - opposite of add. sub (6) intvariable
mul - multiplies specified number or variable by specified number(second number in writeVar only) or variable. the second variable will always be the answer unless in a writeVar. mul (3) intvariable
div - opposite of mul. div (2) intvariable
conv - converts a variable's datatype to the specified datatype
pie - multiply a variable by Pi, preciseness can be specified
rand - when placed just before an 2 number integer or decimal in a setvar statement, it will pick a random number between the numbers and write it to the variable. setVar randomvariable rand(1, 100)
bleed - decreases a variable by a configurable amount every operation or amount of operations for a certain amount of operations. bleed (amount) (operations) for (operations)

Basic
declare - declares a variables name, data type, whether its an array or not, and scope
//work on classes tommorow, today we slay
setVar - sets the value of a variable
writeVar - pulls the first value (or values in an array) from code in its curly braces. 
duplVar - reads a variable and prints it to a different variable. duplVar (sourcevariable) (destinationvariable)
print - prints a variable or a string in quotes to one line
if - checks if a variable is true, then uses a then statement to execute it. can be modified by NOT logic with if(not), can only use one variable, but infinitely many times one its own.
andIf - allows you to use more than one variable in an if statement, goes on the line after the If's variables, can also be modified with NOT.
else - if an if statement is not true, the code does the code in the curly brackets.
elseif - like an else statement, but also has values that must be proven true. uses a then statement like if.
then - opposite of else, only does code if true.
chkuse - allows you to check if a variable was used or written toon a certain line or lines in your code. can be used like: chkuse (3-7) variable3
endVar - deletes a file variable at the end of current operation to prevent unnecessary usage of RAM. endVar (uselessVar)

Advanced
kWindow - Summons a Windows 10 window for drawing or buttons. kWindow (resolution, uses x== and y== if config is enabled) (window ID) (window Title) (resizeable? bool)

Auxillaries
mouse.getPos - grabs the mouse position, must be in a writeVar


Flow
setBl - Creates a block, as stated earlier, blocks can be skipped until jumped to with jumpBl if you put /: on the start of the block and :/ on the end. setBl (9,21) "blockWhatever"
jumpBl - Jumps to the beginning of your block. jumpBl (blockWhatever)
jumpLn - jumps to a line in your code.
loop - Loops a code for a specified time amount of runs.
Example:
loop (3) {
...
}
cscInf - a variable that can be placed in the run amount of loops, runs until break statement is hit, program is closed or loop is edited by external file, means Cosmic Infinity, a reference to Gloryhammer
break - breaks a loop prematurely
delay - delays entire flow for a specified amount of operations. delay (10)
fullDelay - sets the amount of delays between an operation. fullDelay (5)
tay - skip over a specified amount of lines. tay (9)
instant - instantly executes all inside its curly brackets

Code and file management/editing
editLn - allows you to edit a line in your code. editLn (7) "/:print "this text in the beginning of a block has been edited with editLn""
$backup - backs up the latest version of the code before running to a .kb (K Backup) file. $backup "codefilebackup"
$call - calls a .k file to start running. $call (external.k)
$ser - create an external file. $ser (path\) (filename) (extension)
$serEdit - edit an external file's line. $serEdit (22) (path\external.k) "endvar (dumbVar)
$serDel - Deletes an external file. $serDel (Polly.png)

Array
arrayDeclare - more configurable version of declare meant for making arrays. arrayDeclare "arrayVariable" (datatype) (array size)
arraySet - sets the values in an Array variable. arraySet arrayVariable {(your values) (more values on another line)}
arrayBset - sets the values in an Array variable in bulk. arrayBset arrayVariable (1-2048)
shuffle - shuffles an array. shuffle arrayVariable (shuffle method)
sort - Sorts an array with an existing sorting algorithm. sort arrayVariable (sorting order) (sorting method)
checkArray - checks if an array is sorted in a certain order, then prints to a bool variable if its sorted or not. checkArray arrayVariable (order) boolVariable
copy - copies an array to a recipient array, overwriting the recipient array. copy arrayVariable1 arrayVariable2
merge - merges an array in front of, or behind another array. merge arrayVariable1 (before) arrayVariable2
mergeTo - merges two arrays to another array. mergeTo arrayVariable1 arrayVariable2 recipientArray
flip - flips a portion of an array. flip arrayVariable (1-256)
move - move a number or portion of an array to a new place, pushing the other numbers to fill its place. move arrayVariable (1-128) (129-256)

Graphics
drawRaw - use this to start manual drawing (pixel, fillpixel and polygon). drawRaw (kWindow to draw to) {multiline drawing code}
hsla/rgba/cmyk - color models that you can use for manual drawing
hslaplus - a proprietary version of HSLA that uses 255 for alpha instead of 0-1
polygon - draws a polygon based on coordinates. 
fillPixel - draws a rectangle based on coordinates.
pixel - colors a singular pixel.
drawImg - draws an image from a file, accepts PNG and JPG. drawImg (Jake.jpg)
drawLine - draws a multi-segment line with a configurable thickness. drawLine (5px) (x==4,y==0)(x==0,y==8)(x==8,y==8)
wash - clear all pixels from the screen

3D


Audio
wave - Produces a digital sound wave, would likely need an extension to work right. wave (wavelength) (amplitude) (frequency) (timeperiod) (velocity)
playSnd - plays audio from a file, accepts .wav files. playSnd (Wimbledon.wav)

Interaction
button - a button is an clickable object that can trigger a series of events, and can be drawn on (and/or printed on top of) to make a custom button. you do not need to use drawraw when drawing for a button, only works in app windows.
button ((clickbox x/y) (window id)
  (drawing code)
  (print))
    on.Click {
Code to execute when clicked
              }
input - an input allows a user to write to a variable through the console, input can be customized with print
input (variableuser) (integer) {
print "what is your favorite number?"
}

Config
CFG - starts a cfg section, can only be used once at the beginning of your code, behind the first "start {{"
USEXYTRUE/USEXYFALSE - toggles whether coordinates need x==?,y==? to function, if set to USEXYFALSE, they will be reduced to ?,? only

Internet
$link - can be used in button as executed code, will open a link in the default browser. $link (https://www.youtube.com/watch?v=YGV6bCTMM5w)
$hPost - Sends a POST request method to an HTTP link. $hPost /yourendpoint (yourhost.com) (application/content) (Bearer accessToken) { key (value) }
$hGet - Sends a GET request method to an HTTP link. $hGet /yourendpoint (yourhost.com) (application/content) (Bearer accessToken) { key (value) }
$hPut - Sends a PUT request method to an HTTP link. Syntax: $hPut /yourendpoint (yourhost.com) (application/content) (Bearer accessToken) { key (value) }
$hDelete - Sends a DELETE request method to an HTTP link. Syntax: $hDelete /yourendpoint (yourhost.com) (application/content) (Bearer accessToken) { key (value) }

//This is a singleline comment
/c this is a multi 
line comment c/

█████████████ ██████  ██████ ██████     ██████ █████████████  ██████ ███████████████████    ██ ██████  
██     ██   ████   ████    ████   ██    ██   ████     ██   ████    ████   ██  ██   ██████   ████       
█████  ██████ ██████ ██    ████████     ██████ █████  ██████ ██    ████████   ██   ████ ██  ████   ███ 
██     ██   ████   ████    ████   ██    ██   ████     ██     ██    ████   ██  ██   ████  ██ ████    ██ 
█████████   ████   ██ ██████ ██   ██    ██   ███████████      ██████ ██   ██  ██   ████   ████ ██████  

Syntax Errors

errorcode: sError1 - Alulim
explanation: 'if' improper syntax at 7-9
troubleshoot: incorrect bracket usage - did you mean this?
"if {
    variable1 == 19
} th... [rest of your code]"
This error occurs if you are missing, or have improperly placed your curly brackets.
-------------------------------------------------------------------------------------------------------------
errorcode: sError2 - Alalngar
explanation: 'if' improper syntax at 7-9
troubleshoot: 'varrable1' is not a variable - did you mean this?
"if {
    variable1 == 19
} th... [rest of your code]"
This error occurs if a variable has been misspelt, or does not exist in your operation.
the variable suggestor works via seeing if there is a variable within 3 changed letters of the improper variable, and choose the first one. if there is not, and theres more than 3 changed letters, then it will post, instead of the correct variable, itll say '//choose a variable'
-------------------------------------------------------------------------------------------------------------
errorcode sError3 - Oleg
explanation: 'declare' possible misspelt syntax at 2
troubleshoot: 'declrae' is not syntax - did you mean this?
"declare variable1 (bool)"
Occurs if declare (or another syntax) is misspelt, works just like the variable suggestor, but it pulls from a list of most basic commands, with the top being most basic, and the bottom being least
-------------------------------------------------------------------------------------------------------------
